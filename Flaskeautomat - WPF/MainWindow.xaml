<Window x:Class="Flaskeautomat___WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Flaskeautomat___WPF"
        mc:Ignorable="d"
        Title="" Height="500" Width="335" Background="DimGray"
        WindowStyle="None"
        AllowsTransparency="true"
        ResizeMode="CanResizeWithGrip">

    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="12" x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LabelStyle" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border CornerRadius="12" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" Margin="-8,-8,0,0">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="210"/>
            <ColumnDefinition Width="125"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <!-- Border for the window with close, maximize, minimize -->
        <Border Grid.ColumnSpan="2" 
                Background="#252525"
                MouseDown="Border_MouseDown">

            <Grid HorizontalAlignment="Stretch">
                <Label Content="Flaskeautomat"
                       Foreground="Gray"
                       FontWeight="SemiBold"/>

                <StackPanel HorizontalAlignment="Right"
                            Orientation="Horizontal">

                    <Button Width="20" Height="20"
                            Content="_"
                            Background="Transparent"
                            BorderThickness="0"
                            Foreground="Gray"
                            FontWeight="Bold"
                            Margin="0,0,0,4"
                           Click="ButtonMinimize_Click"/>

                    <Button Width="20" Height="20"
                            Content="▢"
                            Background="Transparent"
                            BorderThickness="0"
                            Foreground="Gray"
                            FontWeight="Bold"
                            Click="ButtonMaximize_Click"/>

                    <Button Width="20" Height="20"
                            Content="⨉"
                            Background="Transparent"
                            BorderThickness="0"
                            Foreground="Gray"
                            FontWeight="Bold"
                            Click="ButtonClose_Click"/>

                </StackPanel>

            </Grid>
        </Border>

        <!-- The bottle machine -->
        <Grid Grid.Column="0" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Image Grid.RowSpan="4" Source="\Pictures\MachineBetter.png"></Image>

            <!-- Row where you can deposit bottles -->
            <Grid Grid.Row="1" Grid.ColumnSpan="2" 
                  Margin="25,66,25,0" Grid.RowSpan="2">

                <Border Grid.Column="1" 
                        Grid.Row="1" 
                        Margin="6,31,33,307">
                    <DockPanel>
                        <Canvas Height="51" Width="61" x:Name="Canvas" AllowDrop="True" Background="Transparent" Drop="DropImage">
                            <Image x:Name="imageFromDrop"></Image>
                        </Canvas>
                    </DockPanel>
                </Border>
            </Grid>

            <!-- Row with the button and display -->
            <Grid Grid.Row="1" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                </Grid.ColumnDefinitions>
            </Grid>

            <Button Style="{DynamicResource ButtonStyle}" Background="Green" x:Name="moneyButton"
                    Content="Take Money" Margin="31,216,96,218"
                    Click="moneyButton_Click"/>
            <Label x:Name="Display" HorizontalAlignment="Left" Margin="58,321,0,0" VerticalAlignment="Top" Height="117" Width="130"/>
        </Grid>

        <!-- Lineup for the bottles -->
        <Grid Grid.Column="1" Grid.Row="1">
            <DockPanel Grid.ColumnSpan="4" Grid.RowSpan="4">
                <ListBox>
                    <ListBox.Resources>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Width" Value="90"/>
                            <Setter Property="Height" Value="100"/>
                            <EventSetter Event="MouseLeftButtonDown" Handler="DragImage"/>
                        </Style>
                    </ListBox.Resources>
                    <ListBoxItem>
                        <Image x:Name="cola" Source="\Pictures\CocaCola.png"></Image>
                    </ListBoxItem>
                    <ListBoxItem >
                        <Image x:Name="heineken" Source="\Pictures\Heineken.png"></Image>
                    </ListBoxItem>
                    <ListBoxItem>
                        <Image x:Name="faxeKondi" Source="\Pictures\FaxeKondi.png"></Image>
                    </ListBoxItem>
                    <ListBoxItem>
                        <Image x:Name="urge" Source="\Pictures\Urge.png"></Image>
                    </ListBoxItem>
                    <ListBoxItem>
                        <Image x:Name="carlsberg" Source="\Pictures\Carlsberg.jpg"></Image>
                    </ListBoxItem>
                </ListBox>
            </DockPanel>
        </Grid>
        <Label Style="{DynamicResource LabelStyle}" Background="CadetBlue" x:Name="AllCoins" HorizontalAlignment="Left" Margin="143,102,0,0" Grid.Row="1" VerticalAlignment="Top" Height="67" Width="43"/>
    </Grid>
</Window>
